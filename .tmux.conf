# vim: set sw=4 sts=4 ft=tmux et fdm=marker fdc=3 fdl=0:
# from https://github.com/cdated/ConfigSync.git
# Reload the config file
set -g prefix ^g
unbind ^b
bind g send-prefix
bind r source-file ~/.tmux.conf

# Behaviors                                                        {{{
# no annoying audible bell, please
set   -g bell-on-alert      off
set   -g bell-action        none
#set  -g visual-activity    on
#set  -g visual-bell        on

#setw -g aggressive-resize  on
setw  -g utf8 on            # 开启窗口的UTF-8支持
set   -g default-terminal   "screen-256color"
#set  -g alternate-screen   off
#set  -a terminal-overrides 'urxvt*:smcup@:rmcup@'
set   -a terminal-overrides "*256col*:colors=256,rxvt:dch1=\e[P"

set   -g  history-limit     9999
set   -g  display-time      3000
set   -g  repeat-time       1000
set   -sg escape-time       0

set   -g mouse-select-pane   on
set   -g mouse-select-window off
# }}}

# Status Line                                                      {{{
# Enable tumx powerline                                            {{{
set-option -g status              on
set-option -g status-interval     2
set-option -g status-utf8         on
set-option -g status-justify      "centre"
set-option -g status-left-length  60
set-option -g status-right-length 90
set-option -g status-left "#(~/.tmux/tmux-powerline/status-left.sh)"
set-option -g status-right "#(~/.tmux/tmux-powerline/status-right.sh)"
# Mute left statusbar.
bind C-[ run '~/.tmux/tmux-powerline/mute_statusbar.sh left'
# Mute right statusbar.
bind C-] run '~/.tmux/tmux-powerline/mute_statusbar.sh right'

#set -g status-left '#[fg=green]#H'
#set -g status-right "#(date +%H:%M' ')"
#set -g status-right-length 40
#set -g status-right '#[fg=red]'\
#'#(uptime | cut -d"," -f 3- | cut -d":" -f 2-)  '\
#'#[fg=green]%Y-%m-%d %H:%M'
# }}}
# Custom colors                                                    {{{
set   -g status-bg                     "#002b36"
set   -g status-fg                     "#E6E5E2"
setw  -g window-status-current-bg      "#0087ff"
setw  -g window-status-current-fg      "#000000"
setw  -g window-status-bell-bg         "#5F5Faf"
setw  -g window-status-bell-fg         "#FFFFD7"
setw  -g window-status-content-bg      "#000000"
setw  -g window-status-content-fg      "#EA0000"
setw  -g window-status-activity-fg     "#EFEF1F"
setw  -g window-status-activity-bg     "#000033"
setw  -g window-status-bg              "#E4E4E4"
setw  -g window-status-fg              "#262626"
set   -g window-status-format          "#I:#W "
set   -g window-status-current-format  "#I:#W "
# }}}
# Title                                                            {{{
# automatically set window title
set  -g automatic-rename
set  -g set-titles               on
setw -g monitor-activity         on
set  -g quiet                    on
# }}}
# status line}}}

# Key bindings                                                     {{{
# Copy mode                                                        {{{
set  -g status-keys vi       # 命令模式中的键盘布局
setw -g mode-keys   vi       # 复制模式中的键盘布局
#setw-g mode-keys   emacs    # 可以设置为vi或emacs

bind -t vi-copy 'v'   begin-selection
bind -t vi-copy 'C-v' rectangle-toggle
bind -t vi-copy '-'   start-of-line
bind -t vi-copy '_'   end-of-line
bind -t vi-copy 'C-u' page-up
bind -t vi-copy 'C-d' page-down

bind y send-keys Enter                          \
    \; save-buffer '/tmp/tmux-buffer'           \
    \; run-shell "cat /tmp/tmux-buffer | xclip" \
    \; display "Copy Done!!"

bind T list-keys -t vi-copy

#bind C-u copy-mode -u
#bind -t vi-copy 'y' copy-selection

#bind -t vi-copy y copy-selection                \
    #\; save-buffer /tmp/tmux-buffer             \
    #\; run-shell "cat /tmp/tmux-buffer | xclip"

#bind y   copy-mode           \
    #\; send-keys Space       \
    #\; send-keys '$'         \
    #\; send-keys Enter       \
    #\; display "Copy Done!!"
# }}}
# Pane management                                                  {{{
unbind '"'
unbind '-'
unbind '%'
bind -r - splitw -v           # 分割成上下两个窗格
bind -r \ splitw -h           # 分割成左右两个窗格

set -g  main-pane-height 25
set -g  main-pane-width  62
bind _  select-layout    main-horizontal
bind |  select-layout    main-vertical
bind 2  select-layout    even-horizontal
bind 3  select-layout    even-vertical
bind 1  select-layout    tiled

bind  -r k selectp   -U       # 选择上窗格
bind  -r j selectp   -D       # 选择下窗格
bind  -r h selectp   -L       # 选择左窗格
bind  -r l selectp   -R       # 选择右窗格

bind  -r C-k resizep -U 3     # 改变窗格大小
bind  -r C-j resizep -D 3     # 跟选择窗格的设置相同
bind  -r C-h resizep -L 8     # 只是多加Ctrl（Ctrl-k）
bind  -r C-l resizep -R 8     # ...

#bind -r C-Left  resizep -L 1 # 改变窗格大小
#bind -r C-Right resizep -R 1 # 跟上面相同
#bind -r C-Down  resizep -D 1 # 只是幅度变小
#bind -r C-Up    resizep -U 1 # 默认绑定

bind  -r u swapp -U           # 与上窗格交换 Ctrl-u
bind  -r d swapp -D           # 与下窗格交换 Ctrl-d
bind  -r M-h run '~/.tmux/tmux-swap-pane.rb left'
bind  -r M-l run '~/.tmux/tmux-swap-pane.rb right'
bind  -r M-j run '~/.tmux/tmux-swap-pane.rb down'
bind  -r M-k run '~/.tmux/tmux-swap-pane.rb up'
bind  -r M-m run '~/.tmux/tmux-swap-pane.rb master'
# }}}
# Window management                                                {{{
unbind '{'
bind -r C-c new-window
bind -n M-` last-window
bind -n M-1 selectw   -t:1
bind -n M-2 selectw   -t:2
bind -n M-3 selectw   -t:3
bind -n M-4 selectw   -t:4
bind -n M-5 selectw   -t:5
bind -n M-6 selectw   -t:6
bind -n M-7 selectw   -t:7
bind -n M-8 selectw   -t:8
bind -n M-9 selectw   -t:9
bind -n M-0 selectw   -t:0
bind -n M-= selectw   -t:0

bind -r M-` send-key  M-`
bind -r M-1 send-key  M-1
bind -r M-2 send-key  M-2
bind -r M-3 send-key  M-3
bind -r M-4 send-key  M-4
bind -r M-5 send-key  M-5
bind -r M-6 send-key  M-6
bind -r M-7 send-key  M-7
bind -r M-8 send-key  M-8
bind -r M-9 send-key  M-9
bind -r M-0 send-key  M-0
bind -r M-= send-key  M-=

bind -r < join-pane   -t :-.bottom-right
bind -r > join-pane   -t :+.bottom-right
bind / command-prompt -p "寻找窗口:" "findw %%"
# }}}
# Session management                                               {{{
unbind 'd'
bind   ^d detach-client
unbind 'x'
bind    N switch-client -n
bind    P switch-client -p
bind    L switch-client -l
bind   -n C-F4 kill-pane
bind   -r C-F4 send-key  C-F4
bind    z confirm -p "杀死当前所有会话?! y/n:" kill-session
bind   -n M-F4 confirm  -p "杀死当前窗口? y/n:" kill-window
bind   -r M-F4 send-key  M-F4
#bind s choose-session
# }}}
# Utils                                                            {{{
bind m command-prompt -p "查看手册：" "splitw -h 'exec man %%'"
#bind @ command-prompt "splitw -h 'exec perldoc -f %%'"
bind @ command-prompt -p "Ruby API:" "splitw -h 'exec ri %%|less'"
bind ! command-prompt -p "监视关键字:" "setw monitor-content %%"

bind C-W if "tmux show-window-options|grep '-silence 5'" \
"setw monitor-activity on  \; setw monitor-silence 0 \; "\
"display '关闭空闲监视'" \
"setw monitor-activity off \; setw monitor-silence 5 \; "\
"display '开启空闲监视'"

# }}}
# key bindings }}}

# Start sessions                                                   {{{
# 新建名为 work 的会话
new     -s work

neww    -t :7 -n '✍ ' vim
selectw -t :7

#  系统监视
neww    -t :2 -n ' ' 'slurm -L -i eth0'
splitw  -dh  -p 62  -t :2 htop
setw    -t :2 monitor-activity off
setw    -t :2 monitor-silence 10
selectw -t :2

# 启动 rtorrent
neww    -t :4 -n ' ' rtorrent
setw    -t :4 monitor-activity off
setw    -t :4 monitor-silence 10
selectw -t :4

# 启动 mutt
neww    -t :6 -n ' ' mutt
selectw -t :6
setw    -t :6 monitor-content '信箱中有新邮件'

# 默认选择标号为 5 的窗口
neww    -t :5 zsh
selectw -t :5


#new -s work

#if "tmux list-windows|grep '7: '" \
#"setw quiet on" "neww -t :7 -n v vim \; selectw -t :7"

## 网络流量监视
#if "tmux list-windows|grep '⎈ '" \
#"setw quiet on" \
#"neww -t :2 -n '⎈ ' 'slurm -L -i eth0' \; "\
#"setw -t :2 monitor-activity off \; "\
#"setw -t :2 monitor-silence 10 \; selectw -t :2"

## 启动 rtorrent
#if "tmux list-windows|grep '♫ '" \
#"setw quiet on" \
#"neww -t :4 -n '♫ ' rtorrent \; "\
#"setw -t :4 monitor-activity off \; "\
#"setw -t :4 monitor-silence 10 \; selectw -t :4"

## 启动 mutt
#if "tmux list-windows|grep '✉ '" \
#"setw quiet on" "neww -t :6 -n '✉ ' mutt \; "\
#"selectw -t :6 \; setw -t :6 monitor-content '信箱中有新邮件'"

##if "tmux list-windows|grep '5: '" \
##"setw quiet on" "neww -t :5 zsh \; selectw -t :5"
#neww    -t :5 zsh

#selectw -t :2
#selectw -t :4
#selectw -t :6
#selectw -t :7
#selectw -t :5
# }}}
